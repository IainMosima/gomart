// Code generated by MockGen. DO NOT EDIT.
// Source: notification_service_int.go

// Package service is a generated GoMock package.
package service

import (
	context "context"
	reflect "reflect"

	schema "github.com/IainMosima/gomart/domains/order/schema"
	gomock "github.com/golang/mock/gomock"
)

// MockNotificationService is a mock of NotificationService interface.
type MockNotificationService struct {
	ctrl     *gomock.Controller
	recorder *MockNotificationServiceMockRecorder
}

// MockNotificationServiceMockRecorder is the mock recorder for MockNotificationService.
type MockNotificationServiceMockRecorder struct {
	mock *MockNotificationService
}

// NewMockNotificationService creates a new mock instance.
func NewMockNotificationService(ctrl *gomock.Controller) *MockNotificationService {
	mock := &MockNotificationService{ctrl: ctrl}
	mock.recorder = &MockNotificationServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNotificationService) EXPECT() *MockNotificationServiceMockRecorder {
	return m.recorder
}

// SendEmail mocks base method.
func (m *MockNotificationService) SendEmail(ctx context.Context, order *schema.OrderResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendEmail", ctx, order)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendEmail indicates an expected call of SendEmail.
func (mr *MockNotificationServiceMockRecorder) SendEmail(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendEmail", reflect.TypeOf((*MockNotificationService)(nil).SendEmail), ctx, order)
}

// SendSMS mocks base method.
func (m *MockNotificationService) SendSMS(ctx context.Context, order *schema.OrderResponse) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SendSMS", ctx, order)
	ret0, _ := ret[0].(error)
	return ret0
}

// SendSMS indicates an expected call of SendSMS.
func (mr *MockNotificationServiceMockRecorder) SendSMS(ctx, order interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SendSMS", reflect.TypeOf((*MockNotificationService)(nil).SendSMS), ctx, order)
}
