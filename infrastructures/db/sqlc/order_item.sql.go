// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: order_item.sql

package db

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

const createOrderItem = `-- name: CreateOrderItem :one
INSERT INTO order_items (order_id, product_id, quantity, unit_price, total_price)
VALUES ($1, $2, $3, $4, $5)
RETURNING order_item_id, order_id, product_id, quantity, unit_price, total_price, created_at, is_deleted
`

type CreateOrderItemParams struct {
	OrderID    uuid.UUID      `json:"order_id"`
	ProductID  uuid.UUID      `json:"product_id"`
	Quantity   int32          `json:"quantity"`
	UnitPrice  pgtype.Numeric `json:"unit_price"`
	TotalPrice pgtype.Numeric `json:"total_price"`
}

func (q *Queries) CreateOrderItem(ctx context.Context, arg CreateOrderItemParams) (OrderItem, error) {
	row := q.db.QueryRow(ctx, createOrderItem,
		arg.OrderID,
		arg.ProductID,
		arg.Quantity,
		arg.UnitPrice,
		arg.TotalPrice,
	)
	var i OrderItem
	err := row.Scan(
		&i.OrderItemID,
		&i.OrderID,
		&i.ProductID,
		&i.Quantity,
		&i.UnitPrice,
		&i.TotalPrice,
		&i.CreatedAt,
		&i.IsDeleted,
	)
	return i, err
}
