name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: mosimaiain
  IMAGE_NAME: gomart

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.5'

    - name: Cache Go modules
      uses: actions/cache@v3
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: GitHub Workflow Environment
      run: |
        echo "Repository: ${{ github.repository }}"
        echo "Ref: ${{ github.ref }}"
        echo "Actor: ${{ github.actor }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "SHA: ${{ github.sha }}"

    - name: Run tests
      run: make test

    - name: Set up Docker Buildx
      if: github.event_name != 'pull_request'
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v3
      with:
        registry: ${{ env.DOCKER_REGISTRY }}
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Set image tags
      if: github.event_name != 'pull_request'
      id: set-tags
      run: |
        IMAGE_URI="${{ env.DOCKER_REGISTRY }}/${{ env.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}"
        echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_OUTPUT
        echo "IMAGE_TAG=main" >> $GITHUB_OUTPUT

    - name: Build and push Docker image
      if: github.event_name != 'pull_request'
      uses: docker/build-push-action@v5
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.set-tags.outputs.IMAGE_URI }}:${{ steps.set-tags.outputs.IMAGE_TAG }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Update deployment status
      if: github.event_name != 'pull_request'
      run: |
        echo "Successfully built and pushed Docker image"
        echo "Image: ${{ steps.set-tags.outputs.IMAGE_URI }}:${{ steps.set-tags.outputs.IMAGE_TAG }}"
        echo "Tag: ${{ steps.set-tags.outputs.IMAGE_TAG }}"
        echo "Branch: ${{ github.ref_name }}"
        echo "Deployed to DockerHub"